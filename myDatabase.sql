-- MySQL Script generated by MySQL Workbench
-- Wed Nov  2 14:22:03 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Movie
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Movie
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Movie` DEFAULT CHARACTER SET utf8 ;
USE `Movie` ;

-- -----------------------------------------------------
-- Table `Movie`.`Director`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie`.`Director` (
  `directorID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Age` INT NULL,
  PRIMARY KEY (`directorID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie`.`Movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie`.`Movie` (
  `movieID` INT NOT NULL AUTO_INCREMENT,
  `Director` INT NOT NULL,
  `Title` VARCHAR(45) NOT NULL,
  `Genre` VARCHAR(45) NOT NULL,
  `ReleaseDate` VARCHAR(45) NOT NULL,
  `MoneyEarned` INT NOT NULL,
  `Actor` INT NULL,
  PRIMARY KEY (`movieID`),
  INDEX `fk_Movie_Director1_idx` (`Director` ASC) VISIBLE,
  CONSTRAINT `fk_Movie_Director1`
    FOREIGN KEY (`Director`)
    REFERENCES `Movie`.`Director` (`directorID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie`.`Actor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie`.`Actor` (
  `actorID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Age` INT NOT NULL,
  `MoviesPlayed` INT NULL,
  `CateredBy` VARCHAR(45) NULL,
  PRIMARY KEY (`actorID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie`.`Movie_has_Actor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie`.`Movie_has_Actor` (
  `Movie_movieID` INT NOT NULL,
  `Actor_actorID` INT NOT NULL,
  PRIMARY KEY (`Movie_movieID`, `Actor_actorID`),
  INDEX `fk_Movie_has_Actor_Actor1_idx` (`Actor_actorID` ASC) VISIBLE,
  INDEX `fk_Movie_has_Actor_Movie_idx` (`Movie_movieID` ASC) VISIBLE,
  CONSTRAINT `fk_Movie_has_Actor_Movie`
    FOREIGN KEY (`Movie_movieID`)
    REFERENCES `Movie`.`Movie` (`movieID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Movie_has_Actor_Actor1`
    FOREIGN KEY (`Actor_actorID`)
    REFERENCES `Movie`.`Actor` (`actorID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie`.`Catering`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie`.`Catering` (
  `cateringID` INT NOT NULL AUTO_INCREMENT,
  `CompanyName` VARCHAR(45) NOT NULL,
  `Address` VARCHAR(45) NOT NULL,
  `Crew` VARCHAR(45) NULL,
  PRIMARY KEY (`cateringID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Movie`.`crew`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Movie`.`crew` (
  `crewID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NULL,
  `Age` INT NULL,
  `Address` VARCHAR(45) NULL,
  PRIMARY KEY (`crewID`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

INSERT INTO crew (name, age, address)
VALUES ("Daniel Smith", 32, "1205 Budapest, Bádogos utca 62/A"),
       ("Bogdán Attila", 36, "8600 Gyöngyös Király utca 5"),
       ("Filippos Matzios", 30, "7766 Athens King Road 19");
       
INSERT INTO catering (companyname, address, Crew)
VALUES ("Pineapple Ltd.", "11911 USA, Miami, Lincoln road 95", 1),
	   ("Pizza Ltd.", "11911 USA, NY, Jefferson road 234", 2),
       ("Tomato Ltd.", "11911 USA, Knoxville, Obama road 2", 3);
       
INSERT INTO actor (name, age, moviesplayed, cateredby)
VALUES ("Robert Downey Jr.", 52, 1, 2),
	   ("Chris Evans", 40, 2, 1),
       ("Chris Hemsworth", 36, 3, 3);
       
INSERT INTO director (name, age)
VALUES ("Joe Russo", 49),
	   ("Anthony Russo", 53),
       ("Joss Whedon", 44);
       
INSERT INTO movie (Director, title, genre, releasedate, moneyearned, actor)
VALUES (3, "Avengers: Age of Ultron", "Sci-Fi", 2015, 10000000, 2),
	   (2, "Avengers: Infinity War", "Adventure", 2018, 20000000, 3),
       (1, "Avengers: Endgame", "Sci-Fi", 2019, 300000000, 1);